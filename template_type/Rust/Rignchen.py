from lib.i_o import getData, run
from lib.files import makeTree
from os import chdir

data = getData().getName()

makeTree({
    f"{data.name}": {
        "src": {
            "main.rs": [
                "use clap::Parser;",
                f"use {data.name}::cli::Args;",
                "",
                "fn main() {",
                "    let args = Args::parse();",
                r'    println!("{:?}", args);',
                "}"
            ],
            "lib.rs": [
                "pub mod cli;"
            ],
            "cli.rs": [
                "use clap::Parser;",
                "",
                "structstruck::strike! {",
                "    #[strikethrough[derive(Parser, Debug)]]",
                "    #[clap(verbatim_doc_comment)]",
                "    #[command(version)]",
                "    pub struct Args {",
                "        #[clap(subcommand)]",
                r"        pub cmd: pub enum Command {}",
                "    }",
                "}"
            ]
        },
        ".github": {
            "dependabot.yml": [
                '# To get started with Dependabot version updates, you\'ll need to specify which',
                '# package ecosystems to update and where the package manifests are located.',
                '# Please see the documentation for all configuration options:',
                '# https://docs.github.com/code-security/dependabot/dependabot-version-updates/configuration-options-for-the-dependabot.yml-file',
                '',
                'version: 2',
                'updates:',
                '  - package-ecosystem: "cargo" # See documentation for possible values',
                '    directory: "/" # Location of package manifests',
                '    schedule:',
                '      interval: "weekly"',
                '  - package-ecosystem: "github-actions" # See documentation for possible values',
                '    directory: "/" # Location of package manifests',
                '    schedule:',
                '      interval: "weekly"'
            ]
        },
        "Cargo.toml": [
            "[package]",
            f"name = \"{data.name}\"",
            "version = \"0.0.1\"",
            "edition = \"2021\"",
            "",
            "[dependencies]"
        ],
        ".gitignore": [
            "# will have compiled files and executables",
            "debug/",
            "target/",
            "",
            "# These are backup files generated by rustfmt",
            "**/*.rs.bk",
            "",
            "# MSVC Windows builds of rustc generate these, which store debugging information",
            "*.pdb",
            "",
            "# editors and IDEs",
            ".vscode/",
            ".idea/",
            "*.sw[pom]"
        ]
    }
})

chdir(data.name)

run([
    "cargo add clap --features derive",
    "cargo add structstruck",
    "git init",
    "git add .",
    "git commit -m \"Initial commit\""
])

